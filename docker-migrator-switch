#!/usr/bin/env python

import argparse
import os
import socket
import thread

default_service_bind_addr = "0.0.0.0"
default_service_bind_port = 12345

def run_migrator_service(args,unknown_args):
    
    print "Waiting for Connection..."
     
    host = args.bind_addr,args.bind_port
    server_sk = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    server_sk.bind(host)
    server_sk.listen(8)
    connection_sks = [None,None]
    print args.path

    while True:
        for i in range(len(connection_sks)):
            connection_sks[i],dummy = server_sk.accept()

        #Organize the docker-migrate-service cmd args
        service_cmd = [args.path]
        print service_cmd
        service_cmd.extend(unknown_args)
        service_cmd.extend(["--fdrpc",str(connection_sks[0].fileno()),"--fdmem",str(connection_sks[1].fileno())])

        #Exec the cmd
        cmd = " ".join(service_cmd)
        print "Exec cmd docker-migrate-service:{0}"+str(cmd)
        thread.start_new_thread(os.system,tuple([cmd]))
  
def run_phaul_client(args, unknown_args):
	"""Run p.haul"""

	print "Establish connection..."

	# Establish connection
	dest_host = args.to, args.port

	connection_sks = [None, None]
	for i in range(len(connection_sks)):
		connection_sks[i] = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		connection_sks[i].connect(dest_host)

	# Organize p.haul args
	target_args = [args.path]
	target_args.extend(unknown_args)
	target_args.extend(["--to", args.to,
		"--fdrpc", str(connection_sks[0].fileno()),
	        "--fdmem", str(connection_sks[1].fileno())])

	# Call p.haul
	print "Exec p.haul: {0}".format(" ".join(target_args))
	os.system(" ".join(target_args))

parser = argparse.ArgumentParser("docker-migrator args process")
sub_parser = parser.add_subparsers(title = "Sunbcommands")
service_parser = sub_parser.add_parser("service",help="start docker-migrator service thread!")
service_parser.set_defaults(func=run_migrator_service)
service_parser.add_argument("--bind-addr",help="IP to bind to",type=str,default=default_service_bind_addr)
service_parser.add_argument("--bind-port",help="port to bind to",type=int,default=default_service_bind_port)
service_parser.add_argument("--path",help="the path of docker-migrator service script",type=str,default=os.path.join(os.path.dirname(__file__),"docker-migrate-service")) 


# Initialize client mode arguments parser
client_parser = sub_parser.add_parser("client", help="Client mode")
client_parser.set_defaults(func=run_phaul_client)
client_parser.add_argument("to", help="IP where to haul")
client_parser.add_argument("--port", help="Port where to haul", type=int,
	default=default_service_bind_port)
client_parser.add_argument("--path", help="Path to p.haul script",
	default=os.path.join(os.path.dirname(__file__), "p.haul"))


args,unknown_args = parser.parse_known_args()
try:
    args.func(args,unknown_args)
except KeyboardInterrupt:
    pass
